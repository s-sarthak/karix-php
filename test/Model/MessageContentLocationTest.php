<?php
/**
 * MessageContentLocationTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Karix
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * karix api
 *
 * Karix API lets you interact with the Karix platform using an omnichannel messaging API. It also allows you to query your account, set up webhooks and buy phone numbers.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@karix.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Karix;

/**
 * MessageContentLocationTest Class Doc Comment
 *
 * @category    Class
 * @description Location content to be sent to destinations
 * @package     Karix
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class MessageContentLocationTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "MessageContentLocation"
     */
    public function testMessageContentLocation()
    {
    }

    /**
     * Test attribute "longitude"
     */
    public function testPropertyLongitude()
    {
        $message_content_location = new \Karix\Model\MessageContentLocation();
        $longitude = "12.9716";
        
        $message_content_location->setLongitude($longitude);
        $this->assertEquals($longitude, $message_content_location->getLongitude());

    }

    /**
     * Test attribute "latitude"
     */
    public function testPropertyLatitude()
    {
        $message_content_location = new \Karix\Model\MessageContentLocation();
        $latitude = "77.5946";
        
        $message_content_location->setLatitude($latitude);
        $this->assertEquals($latitude, $message_content_location->getLatitude());

    }

    /**
     * Test attribute "label"
     */
    public function testPropertyLabel()
    {
        $message_content_location = new \Karix\Model\MessageContentLocation();
        $label = "Bangalore";
        
        $message_content_location->setLabel($label);
        $this->assertEquals($label, $message_content_location->getLabel());

    }

    /**
     * Test attribute "address"
     */
    public function testPropertyAddress()
    {
        $message_content_location = new \Karix\Model\MessageContentLocation();
        $address = "Havoc!";
        
        $message_content_location->setAddress($address);
        $this->assertEquals($address, $message_content_location->getAddress());

    }

    /**
    * Helper to create a good example of model
    */
    public function getGoodExample()
    {
        $longitude = "12.9716";
        
        $latitude = "77.5946";
        
        $label = "Bangalore";
        
        $address = "Havoc!";
        
        return array(
            "longitude" => $longitude,
            "latitude" => $latitude,
            "label" => $label,
            "address" => $address,
        );
    }

    /**
    * Test MessageContentLocation validation
    */
    public function testValidation()
    {
        $example = $this->getGoodExample();
        $message_content_location = new \Karix\Model\MessageContentLocation($example);
        $this->assertTrue($message_content_location->valid());
    }

    /**
    *
    */
    public function testRequiredPropertyLongitude()
    {
        $example = $this->getGoodExample();
        $example['longitude'] = null;
        $message_content_location = new \Karix\Model\MessageContentLocation($example);
        $this->assertFalse($message_content_location->valid());

        $invalidProperties = $message_content_location->listInvalidProperties();
        $this->assertContains("'longitude' can't be null", $invalidProperties);
    }

    /**
    *
    */
    public function testRequiredPropertyLatitude()
    {
        $example = $this->getGoodExample();
        $example['latitude'] = null;
        $message_content_location = new \Karix\Model\MessageContentLocation($example);
        $this->assertFalse($message_content_location->valid());

        $invalidProperties = $message_content_location->listInvalidProperties();
        $this->assertContains("'latitude' can't be null", $invalidProperties);
    }

    /**
    *
    */
    public function testRequiredPropertyLabel()
    {
        $example = $this->getGoodExample();
        $example['label'] = null;
        $message_content_location = new \Karix\Model\MessageContentLocation($example);
        $this->assertFalse($message_content_location->valid());

        $invalidProperties = $message_content_location->listInvalidProperties();
        $this->assertContains("'label' can't be null", $invalidProperties);
    }

    /**
    *
    */
    public function testRequiredPropertyAddress()
    {
        $example = $this->getGoodExample();
        $example['address'] = null;
        $message_content_location = new \Karix\Model\MessageContentLocation($example);
        $this->assertFalse($message_content_location->valid());

        $invalidProperties = $message_content_location->listInvalidProperties();
        $this->assertContains("'address' can't be null", $invalidProperties);
    }

}
