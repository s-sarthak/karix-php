<?php
/**
 * MessageChannelDetailsWhatsappTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Karix
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * karix api
 *
 * Karix API lets you interact with the Karix platform using an omnichannel messaging API. It also allows you to query your account, set up webhooks and buy phone numbers.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@karix.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Karix;

/**
 * MessageChannelDetailsWhatsappTest Class Doc Comment
 *
 * @category    Class
 * @description Details related to &#x60;whatsapp&#x60; channel when message is sent over &#x60;whatsapp&#x60;
 * @package     Karix
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class MessageChannelDetailsWhatsappTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "MessageChannelDetailsWhatsapp"
     */
    public function testMessageChannelDetailsWhatsapp()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        $message_channel_details_whatsapp = new \Karix\Model\MessageChannelDetailsWhatsapp();
        $type = "conversation";
        
        $message_channel_details_whatsapp->setType($type);
        $this->assertEquals($type, $message_channel_details_whatsapp->getType());

        // Check for enum
        $message_channel_details_whatsapp->setType("conversation");
        $message_channel_details_whatsapp->setType("notification");
        try
        {
            $message_channel_details_whatsapp->setType("Invalid Edwfere");
            $this->fail("$message_channel_details_whatsapp->setType accepted input outside of enum");
        }
        catch(\InvalidArgumentException $e){}

    }

    /**
     * Test attribute "platform_fee"
     */
    public function testPropertyPlatformFee()
    {
        $message_channel_details_whatsapp = new \Karix\Model\MessageChannelDetailsWhatsapp();
        $platform_fee = "0.0032";
        
        $message_channel_details_whatsapp->setPlatformFee($platform_fee);
        $this->assertEquals($platform_fee, $message_channel_details_whatsapp->getPlatformFee());

    }

    /**
     * Test attribute "whatsapp_fee"
     */
    public function testPropertyWhatsappFee()
    {
        $message_channel_details_whatsapp = new \Karix\Model\MessageChannelDetailsWhatsapp();
        $whatsapp_fee = "0.0032";
        
        $message_channel_details_whatsapp->setWhatsappFee($whatsapp_fee);
        $this->assertEquals($whatsapp_fee, $message_channel_details_whatsapp->getWhatsappFee());

    }

    /**
    * Helper to create a good example of model
    */
    public function getGoodExample()
    {
        $type = "conversation";
        
        $platform_fee = "0.0032";
        
        $whatsapp_fee = "0.0032";
        
        return array(
            "type" => $type,
            "platform_fee" => $platform_fee,
            "whatsapp_fee" => $whatsapp_fee,
        );
    }

    /**
    * Test MessageChannelDetailsWhatsapp validation
    */
    public function testValidation()
    {
        $example = $this->getGoodExample();
        $message_channel_details_whatsapp = new \Karix\Model\MessageChannelDetailsWhatsapp($example);
        $this->assertTrue($message_channel_details_whatsapp->valid());
    }

    /**
    *
    */
    public function testRequiredPropertyType()
    {
        $example = $this->getGoodExample();
        $example['type'] = null;
        $message_channel_details_whatsapp = new \Karix\Model\MessageChannelDetailsWhatsapp($example);
        $this->assertFalse($message_channel_details_whatsapp->valid());

        $invalidProperties = $message_channel_details_whatsapp->listInvalidProperties();
        $this->assertContains("'type' can't be null", $invalidProperties);
    }

    /**
    *
    */
    public function testEnumPropertyType()
    {
        $example = $this->getGoodExample();
        $example['type'] = "Invalid Edwfere";
        $message_channel_details_whatsapp = new \Karix\Model\MessageChannelDetailsWhatsapp($example);
        $this->assertFalse($message_channel_details_whatsapp->valid());

        $allowedValues = $message_channel_details_whatsapp->getTypeAllowableValues();
        $err_msg = sprintf(
            "invalid value for 'type', must be one of '%s'",
            implode("', '", $allowedValues)
        );
        $invalidProperties = $message_channel_details_whatsapp->listInvalidProperties();
        $this->assertContains($err_msg, $invalidProperties);
    }

    /**
    *
    */
    public function testRequiredPropertyPlatformFee()
    {
        $example = $this->getGoodExample();
        $example['platform_fee'] = null;
        $message_channel_details_whatsapp = new \Karix\Model\MessageChannelDetailsWhatsapp($example);
        $this->assertFalse($message_channel_details_whatsapp->valid());

        $invalidProperties = $message_channel_details_whatsapp->listInvalidProperties();
        $this->assertContains("'platform_fee' can't be null", $invalidProperties);
    }

    /**
    *
    */
    public function testRequiredPropertyWhatsappFee()
    {
        $example = $this->getGoodExample();
        $example['whatsapp_fee'] = null;
        $message_channel_details_whatsapp = new \Karix\Model\MessageChannelDetailsWhatsapp($example);
        $this->assertFalse($message_channel_details_whatsapp->valid());

        $invalidProperties = $message_channel_details_whatsapp->listInvalidProperties();
        $this->assertContains("'whatsapp_fee' can't be null", $invalidProperties);
    }

}
