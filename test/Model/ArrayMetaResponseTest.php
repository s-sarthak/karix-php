<?php
/**
 * ArrayMetaResponseTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Karix
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * karix api
 *
 * Karix API lets you interact with the Karix platform using an omnichannel messaging API. It also allows you to query your account, set up webhooks and buy phone numbers.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@karix.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Karix;

/**
 * ArrayMetaResponseTest Class Doc Comment
 *
 * @category    Class
 * @description ArrayMetaResponse
 * @package     Karix
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ArrayMetaResponseTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "ArrayMetaResponse"
     */
    public function testArrayMetaResponse()
    {
    }

    /**
     * Test attribute "request_uuid"
     */
    public function testPropertyRequestUuid()
    {
        $array_meta_response = new \Karix\Model\ArrayMetaResponse();
        $request_uuid = "e54b13f5-0831-40f1-959f-e9c5a8ff2957";
        
        $array_meta_response->setRequestUuid($request_uuid);
        $this->assertEquals($request_uuid, $array_meta_response->getRequestUuid());

    }

    /**
     * Test attribute "next"
     */
    public function testPropertyNext()
    {
        $array_meta_response = new \Karix\Model\ArrayMetaResponse();
        $next = "https://api.karix.io/<resource>/?limit=10&offset=10";
        
        $array_meta_response->setNext($next);
        $this->assertEquals($next, $array_meta_response->getNext());

    }

    /**
     * Test attribute "previous"
     */
    public function testPropertyPrevious()
    {
        $array_meta_response = new \Karix\Model\ArrayMetaResponse();
        $previous = "example value";
        
        $array_meta_response->setPrevious($previous);
        $this->assertEquals($previous, $array_meta_response->getPrevious());

    }

    /**
     * Test attribute "total"
     */
    public function testPropertyTotal()
    {
        $array_meta_response = new \Karix\Model\ArrayMetaResponse();
        
        $subobj = 1;
        

        $total = $subobj;
        
        $array_meta_response->setTotal($total);
        $this->assertEquals($total, $array_meta_response->getTotal());

    }

    /**
    * Helper to create a good example of model
    */
    public function getGoodExample()
    {
        $request_uuid = "e54b13f5-0831-40f1-959f-e9c5a8ff2957";
        
        $next = "https://api.karix.io/<resource>/?limit=10&offset=10";
        
        $previous = "example value";
        
        
        $subobj = 1;
        

        $total = $subobj;
        
        return array(
            "request_uuid" => $request_uuid,
            "next" => $next,
            "previous" => $previous,
            "total" => $total,
        );
    }

    /**
    * Test ArrayMetaResponse validation
    */
    public function testValidation()
    {
        $example = $this->getGoodExample();
        $array_meta_response = new \Karix\Model\ArrayMetaResponse($example);
        $this->assertTrue($array_meta_response->valid());
    }

}
