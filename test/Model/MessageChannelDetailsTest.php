<?php
/**
 * MessageChannelDetailsTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Karix
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * karix api
 *
 * Karix API lets you interact with the Karix platform using an omnichannel messaging API. It also allows you to query your account, set up webhooks and buy phone numbers.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@karix.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Karix;

/**
 * MessageChannelDetailsTest Class Doc Comment
 *
 * @category    Class
 * @description Channel specific details of this message. - Only contains details of the channel used to send the message
 * @package     Karix
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class MessageChannelDetailsTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "MessageChannelDetails"
     */
    public function testMessageChannelDetails()
    {
    }

    /**
     * Test attribute "sms"
     */
    public function testPropertySms()
    {
        $message_channel_details = new \Karix\Model\MessageChannelDetails();
        
        
        $subobj = new \Karix\Model\MessageChannelDetailsSms();
        

        $sms = $subobj;
        
        $message_channel_details->setSms($sms);
        $this->assertEquals($sms, $message_channel_details->getSms());

    }

    /**
     * Test attribute "whatsapp"
     */
    public function testPropertyWhatsapp()
    {
        $message_channel_details = new \Karix\Model\MessageChannelDetails();
        
        
        $subobj = new \Karix\Model\MessageChannelDetailsWhatsapp();
        

        $whatsapp = $subobj;
        
        $message_channel_details->setWhatsapp($whatsapp);
        $this->assertEquals($whatsapp, $message_channel_details->getWhatsapp());

    }

    /**
    * Helper to create a good example of model
    */
    public function getGoodExample()
    {
        
        
        $subobj = new \Karix\Model\MessageChannelDetailsSms();
        

        $sms = $subobj;
        
        
        
        $subobj = new \Karix\Model\MessageChannelDetailsWhatsapp();
        

        $whatsapp = $subobj;
        
        return array(
            "sms" => $sms,
            "whatsapp" => $whatsapp,
        );
    }

    /**
    * Test MessageChannelDetails validation
    */
    public function testValidation()
    {
        $example = $this->getGoodExample();
        $message_channel_details = new \Karix\Model\MessageChannelDetails($example);
        $this->assertTrue($message_channel_details->valid());
    }

}
