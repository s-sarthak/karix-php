<?php
/**
 * RentNumberTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Karix
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * karix api
 *
 * Karix API lets you interact with the Karix platform using an omnichannel messaging API. It also allows you to query your account, set up webhooks and buy phone numbers.
 *
 * OpenAPI spec version: 2.0
 * Contact: support@karix.io
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: unset
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Karix;

/**
 * RentNumberTest Class Doc Comment
 *
 * @category    Class
 * @description RentNumber
 * @package     Karix
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class RentNumberTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "RentNumber"
     */
    public function testRentNumber()
    {
    }

    /**
     * Test attribute "number"
     */
    public function testPropertyNumber()
    {
        $rent_number = new \Karix\Model\RentNumber();
        $number = "14154009186";
        
        $rent_number->setNumber($number);
        $this->assertEquals($number, $rent_number->getNumber());

    }

    /**
     * Test attribute "webhook_uid"
     */
    public function testPropertyWebhookUid()
    {
        $rent_number = new \Karix\Model\RentNumber();
        $webhook_uid = "f6bcc10c-09c0-4bd5-9d58-0089fe51c3bb";
        
        $rent_number->setWebhookUid($webhook_uid);
        $this->assertEquals($webhook_uid, $rent_number->getWebhookUid());

    }

    /**
     * Test attribute "alias"
     */
    public function testPropertyAlias()
    {
        $rent_number = new \Karix\Model\RentNumber();
        $alias = "Number 1";
        
        $rent_number->setAlias($alias);
        $this->assertEquals($alias, $rent_number->getAlias());

    }

    /**
    * Helper to create a good example of model
    */
    public function getGoodExample()
    {
        $number = "14154009186";
        
        $webhook_uid = "f6bcc10c-09c0-4bd5-9d58-0089fe51c3bb";
        
        $alias = "Number 1";
        
        return array(
            "number" => $number,
            "webhook_uid" => $webhook_uid,
            "alias" => $alias,
        );
    }

    /**
    * Test RentNumber validation
    */
    public function testValidation()
    {
        $example = $this->getGoodExample();
        $rent_number = new \Karix\Model\RentNumber($example);
        $this->assertTrue($rent_number->valid());
    }

    /**
    *
    */
    public function testRequiredPropertyNumber()
    {
        $example = $this->getGoodExample();
        $example['number'] = null;
        $rent_number = new \Karix\Model\RentNumber($example);
        $this->assertFalse($rent_number->valid());

        $invalidProperties = $rent_number->listInvalidProperties();
        $this->assertContains("'number' can't be null", $invalidProperties);
    }

    /**
    *
    */
    public function testRequiredPropertyAlias()
    {
        $example = $this->getGoodExample();
        $example['alias'] = null;
        $rent_number = new \Karix\Model\RentNumber($example);
        $this->assertFalse($rent_number->valid());

        $invalidProperties = $rent_number->listInvalidProperties();
        $this->assertContains("'alias' can't be null", $invalidProperties);
    }

}
